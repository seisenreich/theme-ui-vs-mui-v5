{"ast":null,"code":"import _defineProperty from \"/Users/op/Development/Frontend/theme-ui-vs-mui-v5/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/op/Development/Frontend/theme-ui-vs-mui-v5/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/op/Development/Frontend/theme-ui-vs-mui-v5/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport React, { useState, useEffect, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { useThemeUI, jsx, __ThemeUIInternalBaseThemeProvider } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { Global } from '@emotion/react';\n\nvar toVarName = function toVarName(key) {\n  return \"--theme-ui-\".concat(key.replace('-__default', ''));\n};\n\nvar toVarValue = function toVarValue(key) {\n  return \"var(\".concat(toVarName(key), \")\");\n};\n\nvar join = function join() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.filter(Boolean).join('-');\n};\n\nvar reservedKeys = new Set(['useCustomProperties', 'initialColorModeName', 'printColorModeName', 'initialColorMode', 'useLocalStorage', 'config']); // convert theme values to custom properties\n\nvar toCustomProperties = function toCustomProperties(obj, parent) {\n  var next = Array.isArray(obj) ? [] : {};\n\n  for (var key in obj) {\n    var value = obj[key];\n    var name = join(parent, key);\n\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name);\n      continue;\n    }\n\n    if (reservedKeys.has(key)) {\n      next[key] = value;\n      continue;\n    }\n\n    next[key] = toVarValue(name);\n  }\n\n  return next;\n};\n/**\n * @internal\n * Recursively transforms an object into CSS variables excluding \"modes\" key.\n */\n\n\nvar __objectToVars = function __objectToVars(parent, obj) {\n  var vars = {};\n\n  for (var key in obj) {\n    if (key === 'modes') continue;\n    var name = join(parent, key);\n    var value = obj[key];\n\n    if (value && typeof value === 'object') {\n      vars = _objectSpread(_objectSpread({}, vars), __objectToVars(name, value));\n    } else {\n      vars[toVarName(name)] = value;\n    }\n  }\n\n  return vars;\n};\n/**\n * @internal\n * Creates root styles for color modes.\n * - Transforms color scale into CSS variables.\n * - Sets background and text color.\n */\n\n\nvar __createColorStyles = function __createColorStyles() {\n  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _ref = theme.config || theme || {},\n      useCustomProperties = _ref.useCustomProperties,\n      initialColorModeName = _ref.initialColorModeName,\n      printColorModeName = _ref.printColorModeName,\n      useRootStyles = _ref.useRootStyles;\n\n  var colors = theme.rawColors || theme.colors;\n  if (!colors || useRootStyles === false) return {};\n\n  if (useCustomProperties === false) {\n    return css({\n      color: 'text',\n      bg: 'background'\n    })(theme);\n  }\n\n  var modes = colors.modes || {};\n\n  var styles = __createColorProperties(colors, modes);\n\n  if (printColorModeName) {\n    var mode = printColorModeName === 'initial' || printColorModeName === initialColorModeName ? colors : modes[printColorModeName];\n    styles['@media print'] = __objectToVars('colors', mode);\n  }\n\n  var colorToVarValue = function colorToVarValue(color) {\n    return toVarValue(\"colors-\".concat(color));\n  };\n\n  return css(_objectSpread(_objectSpread({}, styles), {}, {\n    color: colorToVarValue('text'),\n    bg: colorToVarValue('background')\n  }))(theme);\n};\n/**\n * @internal\n * Returns an object with colors turned into Custom CSS Properties and\n * .theme-ui-<colormode> classes used for no-flash serverside rendering.\n */\n\n\nfunction __createColorProperties(colors, modes) {\n  var styles = __objectToVars('colors', colors);\n\n  Object.keys(modes).forEach(function (mode) {\n    var className = \".theme-ui-\".concat(mode);\n    var key = \"&\".concat(className, \", \").concat(className, \" &\");\n    styles[key] = __objectToVars('colors', modes[mode]);\n  });\n  return styles;\n}\n\nvar STORAGE_KEY = 'theme-ui-color-mode';\nvar DARK_QUERY = '(prefers-color-scheme: dark)';\nvar LIGHT_QUERY = '(prefers-color-scheme: light)';\nvar storage = {\n  get: function get() {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  },\n  set: function set(value) {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  }\n};\n\nvar getPreferredColorScheme = function getPreferredColorScheme() {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia(DARK_QUERY).matches) {\n      return 'dark';\n    }\n\n    if (window.matchMedia(LIGHT_QUERY).matches) {\n      return 'light';\n    }\n  }\n\n  return null;\n};\n\nvar useClientsideEffect = typeof window === 'undefined' ? function () {} : useLayoutEffect;\n\nvar TopLevelColorModeProvider = function TopLevelColorModeProvider(_ref2) {\n  var outerCtx = _ref2.outerCtx,\n      children = _ref2.children;\n  var outerTheme = outerCtx.theme || {};\n\n  var _ref3 = outerTheme.config || outerTheme,\n      initialColorModeName = _ref3.initialColorModeName,\n      useColorSchemeMediaQuery = _ref3.useColorSchemeMediaQuery,\n      useLocalStorage = _ref3.useLocalStorage;\n\n  var _useState = useState(function () {\n    var preferredMode = useColorSchemeMediaQuery !== false && getPreferredColorScheme();\n    return preferredMode || initialColorModeName;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorMode = _useState2[0],\n      setColorMode = _useState2[1]; // on first render, we read the color mode from localStorage and\n  // clear the class on document element body\n\n\n  useClientsideEffect(function () {\n    var stored = useLocalStorage !== false && storage.get();\n\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.remove('theme-ui-' + stored);\n    }\n\n    if (useColorSchemeMediaQuery !== 'system' && stored && stored !== colorMode) {\n      colorMode = stored;\n      setColorMode(stored);\n    }\n  }, []); // when mode changes, we save it to localStorage\n\n  useEffect(function () {\n    if (colorMode && useLocalStorage !== false) {\n      storage.set(colorMode);\n    }\n  }, [colorMode, useLocalStorage]);\n  var setPreferredColorScheme = useCallback(function () {\n    var preferredColorScheme = getPreferredColorScheme();\n    setColorMode(preferredColorScheme || initialColorModeName);\n  }, [initialColorModeName]);\n  useEffect(function () {\n    if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n      // It doesn't matter if we add the listener only to the dark media query\n      // Because in our callback function we'll check for both media queries (light and dark).\n      var darkMQL = window.matchMedia(DARK_QUERY);\n\n      if (typeof darkMQL.addEventListener === 'function') {\n        darkMQL.addEventListener('change', setPreferredColorScheme);\n      } else if (typeof darkMQL.addListener === 'function') {\n        darkMQL.addListener(setPreferredColorScheme);\n      }\n    }\n\n    return function () {\n      if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n        var _darkMQL = window.matchMedia(DARK_QUERY);\n\n        if (typeof _darkMQL.removeEventListener === 'function') {\n          _darkMQL.removeEventListener('change', setPreferredColorScheme);\n        } else if (typeof _darkMQL.removeListener === 'function') {\n          _darkMQL.removeListener(setPreferredColorScheme);\n        }\n      }\n    };\n  }, [useColorSchemeMediaQuery, setPreferredColorScheme]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _outerTheme$colors;\n\n    if ((_outerTheme$colors = outerTheme.colors) != null && _outerTheme$colors.modes && initialColorModeName && Object.keys(outerTheme.colors.modes).indexOf(initialColorModeName) > -1) {\n      console.warn('[theme-ui] The `initialColorModeName` value should be a unique name' + ' and cannot reference a key in `theme.colors.modes`.');\n    }\n  }\n\n  var newTheme = useThemeWithAppliedColorMode({\n    colorMode: colorMode,\n    outerTheme: outerTheme\n  });\n\n  var newCtx = _objectSpread(_objectSpread({}, outerCtx), {}, {\n    theme: newTheme,\n    colorMode: colorMode,\n    setColorMode: setColorMode\n  });\n\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: newCtx\n  }, /*#__PURE__*/React.createElement(GlobalColorStyles, {\n    theme: newTheme\n  }), children);\n};\n\nfunction useColorMode() {\n  var _useThemeUI = useThemeUI(),\n      colorMode = _useThemeUI.colorMode,\n      setColorMode = _useThemeUI.setColorMode;\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(\"[useColorMode] requires the ColorModeProvider component\");\n  } // We're allowing the user to specify a narrower type for its color mode name.\n\n\n  return [colorMode, setColorMode];\n}\n\nvar omitModes = function omitModes(colors) {\n  var res = _objectSpread({}, colors);\n\n  delete res.modes;\n  return res;\n};\n\nfunction copyRawColors(colors, outerThemeRawColors) {\n  for (var _i = 0, _Object$entries = Object.entries(colors); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (typeof value === 'string' && !value.startsWith('var(')) {\n      outerThemeRawColors[key] = value;\n    } else if (typeof value === 'object') {\n      var newValue = _objectSpread({}, outerThemeRawColors[key]);\n\n      copyRawColors(value, newValue);\n      outerThemeRawColors[key] = newValue;\n    }\n  }\n}\n\nfunction useThemeWithAppliedColorMode(_ref4) {\n  var outerTheme = _ref4.outerTheme,\n      colorMode = _ref4.colorMode;\n  var theme = useMemo(function () {\n    var res = _objectSpread({}, outerTheme);\n\n    var modes = get(res, 'colors.modes', {});\n    var currentColorMode = get(modes, colorMode, {});\n\n    if (colorMode) {\n      res.colors = _objectSpread(_objectSpread({}, res.colors), currentColorMode);\n    }\n\n    var _ref5 = outerTheme.config || outerTheme,\n        useCustomProperties = _ref5.useCustomProperties,\n        _ref5$initialColorMod = _ref5.initialColorModeName,\n        initialColorModeName = _ref5$initialColorMod === void 0 ? '__default' : _ref5$initialColorMod;\n\n    var outerThemeRawColors = outerTheme.rawColors || outerTheme.colors || {};\n\n    if (useCustomProperties !== false) {\n      var alreadyHasRawColors = res.rawColors != null;\n      var colors = res.colors || {};\n\n      if (alreadyHasRawColors) {\n        outerThemeRawColors = _objectSpread({}, outerThemeRawColors);\n        copyRawColors(colors, outerThemeRawColors);\n\n        if (outerThemeRawColors.modes) {\n          outerThemeRawColors.modes[initialColorModeName] = omitModes(outerThemeRawColors);\n        }\n\n        res.rawColors = outerThemeRawColors;\n      } else {\n        if (!('modes' in outerThemeRawColors)) {\n          res.rawColors = colors;\n        } else {\n          var _modes = _objectSpread(_defineProperty({}, initialColorModeName, omitModes(outerThemeRawColors)), outerThemeRawColors.modes);\n\n          res.rawColors = _objectSpread(_objectSpread({}, colors), {}, {\n            modes: _modes\n          });\n          /* modes doesn't match index signature by design */\n        }\n      }\n\n      res.colors = toCustomProperties(omitModes(outerThemeRawColors), 'colors');\n    }\n\n    return res;\n  }, [colorMode, outerTheme]);\n  return theme;\n}\n\nfunction GlobalColorStyles(_ref6) {\n  var theme = _ref6.theme;\n  return jsx(Global, {\n    styles: function styles() {\n      return {\n        html: __createColorStyles(theme)\n      };\n    }\n  });\n}\n\nfunction NestedColorModeProvider(_ref7) {\n  var outerCtx = _ref7.outerCtx,\n      children = _ref7.children;\n\n  var _newTheme$config2;\n\n  var newTheme = useThemeWithAppliedColorMode({\n    outerTheme: outerCtx.theme,\n    colorMode: outerCtx.colorMode\n  }); // Nested theme providers need to be rerendered after hydration for the correct\n  // color mode to apply.\n\n  var _useState3 = useState( // Note: we could also check some \"ssr-enabled\" flag as an optimization for\n  // SPAs, as deeply nested theme providers will also pay a performance penalty\n  // for this SSR bug fix\n  function () {\n    var _newTheme$config;\n\n    return ((_newTheme$config = newTheme.config) == null ? void 0 : _newTheme$config.useLocalStorage) !== false;\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      needsRerender = _useState4[0],\n      setNeedsRerender = _useState4[1];\n\n  useClientsideEffect(function () {\n    return void setNeedsRerender(false);\n  }, []);\n  var themeColors = newTheme.rawColors || newTheme.colors;\n  var useCustomProperties = (_newTheme$config2 = newTheme.config) == null ? void 0 : _newTheme$config2.useCustomProperties;\n  var colorVars = useMemo(function () {\n    if (useCustomProperties === false) {\n      return {};\n    }\n\n    var colors = themeColors || {};\n    return css(__createColorProperties(colors, colors.modes || {}))(newTheme);\n  }, [newTheme, themeColors, useCustomProperties]);\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: _objectSpread(_objectSpread({}, outerCtx), {}, {\n      theme: newTheme\n    })\n  }, jsx('div', {\n    'data-themeui-nested-provider': true,\n    // the key here ensures that children will be rerendered after color\n    // mode is read from localStorage\n    key: Number(needsRerender),\n    suppressHydrationWarning: true,\n    css: colorVars,\n    children: children\n  }));\n}\n\nvar ColorModeProvider = function ColorModeProvider(_ref8) {\n  var children = _ref8.children;\n  var outerCtx = useThemeUI();\n  var isTopLevelColorModeProvider = typeof outerCtx.setColorMode !== 'function';\n  return isTopLevelColorModeProvider ? /*#__PURE__*/React.createElement(TopLevelColorModeProvider, {\n    outerCtx: outerCtx\n  }, children) : /*#__PURE__*/React.createElement(NestedColorModeProvider, {\n    outerCtx: outerCtx\n  }, children);\n};\n\nvar noflash = \"(function() { try {\\n  var mode = localStorage.getItem('theme-ui-color-mode');\\n  if (!mode) return\\n  document.documentElement.classList.add('theme-ui-' + mode);\\n} catch (e) {} })();\";\n\nvar InitializeColorMode = function InitializeColorMode() {\n  return jsx('script', {\n    key: 'theme-ui-no-flash',\n    dangerouslySetInnerHTML: {\n      __html: noflash\n    }\n  });\n};\n\nexport { ColorModeProvider, InitializeColorMode, useColorMode };","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useLayoutEffect","useThemeUI","jsx","__ThemeUIInternalBaseThemeProvider","css","get","Global","toVarName","key","replace","toVarValue","join","args","filter","Boolean","reservedKeys","Set","toCustomProperties","obj","parent","next","Array","isArray","value","name","has","__objectToVars","vars","__createColorStyles","theme","config","useCustomProperties","initialColorModeName","printColorModeName","useRootStyles","colors","rawColors","color","bg","modes","styles","__createColorProperties","mode","colorToVarValue","Object","keys","forEach","className","STORAGE_KEY","DARK_QUERY","LIGHT_QUERY","storage","window","localStorage","getItem","err","console","warn","set","setItem","getPreferredColorScheme","matchMedia","matches","useClientsideEffect","TopLevelColorModeProvider","outerCtx","children","outerTheme","useColorSchemeMediaQuery","useLocalStorage","preferredMode","colorMode","setColorMode","stored","document","documentElement","classList","remove","setPreferredColorScheme","preferredColorScheme","darkMQL","addEventListener","addListener","removeEventListener","removeListener","process","env","NODE_ENV","_outerTheme$colors","indexOf","newTheme","useThemeWithAppliedColorMode","newCtx","createElement","context","GlobalColorStyles","useColorMode","Error","omitModes","res","copyRawColors","outerThemeRawColors","entries","startsWith","newValue","currentColorMode","alreadyHasRawColors","html","NestedColorModeProvider","_newTheme$config2","_newTheme$config","needsRerender","setNeedsRerender","themeColors","colorVars","Number","suppressHydrationWarning","ColorModeProvider","isTopLevelColorModeProvider","noflash","InitializeColorMode","dangerouslySetInnerHTML","__html"],"sources":["/Users/op/Development/Frontend/theme-ui-vs-mui-v5/node_modules/@theme-ui/color-modes/dist/theme-ui-color-modes.esm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { useThemeUI, jsx, __ThemeUIInternalBaseThemeProvider } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { Global } from '@emotion/react';\n\nconst toVarName = key => `--theme-ui-${key.replace('-__default', '')}`;\n\nconst toVarValue = key => `var(${toVarName(key)})`;\n\nconst join = (...args) => args.filter(Boolean).join('-');\n\nconst reservedKeys = new Set(['useCustomProperties', 'initialColorModeName', 'printColorModeName', 'initialColorMode', 'useLocalStorage', 'config']); // convert theme values to custom properties\n\nconst toCustomProperties = (obj, parent) => {\n  const next = Array.isArray(obj) ? [] : {};\n\n  for (let key in obj) {\n    const value = obj[key];\n    const name = join(parent, key);\n\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name);\n      continue;\n    }\n\n    if (reservedKeys.has(key)) {\n      next[key] = value;\n      continue;\n    }\n\n    next[key] = toVarValue(name);\n  }\n\n  return next;\n};\n/**\n * @internal\n * Recursively transforms an object into CSS variables excluding \"modes\" key.\n */\n\nconst __objectToVars = (parent, obj) => {\n  let vars = {};\n\n  for (let key in obj) {\n    if (key === 'modes') continue;\n    const name = join(parent, key);\n    const value = obj[key];\n\n    if (value && typeof value === 'object') {\n      vars = { ...vars,\n        ...__objectToVars(name, value)\n      };\n    } else {\n      vars[toVarName(name)] = value;\n    }\n  }\n\n  return vars;\n};\n/**\n * @internal\n * Creates root styles for color modes.\n * - Transforms color scale into CSS variables.\n * - Sets background and text color.\n */\n\nconst __createColorStyles = (theme = {}) => {\n  const {\n    useCustomProperties,\n    initialColorModeName,\n    printColorModeName,\n    useRootStyles\n  } = theme.config || theme || {};\n  const colors = theme.rawColors || theme.colors;\n  if (!colors || useRootStyles === false) return {};\n\n  if (useCustomProperties === false) {\n    return css({\n      color: 'text',\n      bg: 'background'\n    })(theme);\n  }\n\n  const modes = colors.modes || {};\n\n  const styles = __createColorProperties(colors, modes);\n\n  if (printColorModeName) {\n    const mode = printColorModeName === 'initial' || printColorModeName === initialColorModeName ? colors : modes[printColorModeName];\n    styles['@media print'] = __objectToVars('colors', mode);\n  }\n\n  const colorToVarValue = color => toVarValue(`colors-${color}`);\n\n  return css({ ...styles,\n    color: colorToVarValue('text'),\n    bg: colorToVarValue('background')\n  })(theme);\n};\n/**\n * @internal\n * Returns an object with colors turned into Custom CSS Properties and\n * .theme-ui-<colormode> classes used for no-flash serverside rendering.\n */\n\nfunction __createColorProperties(colors, modes) {\n  const styles = __objectToVars('colors', colors);\n\n  Object.keys(modes).forEach(mode => {\n    const className = `.theme-ui-${mode}`;\n    const key = `&${className}, ${className} &`;\n    styles[key] = __objectToVars('colors', modes[mode]);\n  });\n  return styles;\n}\n\nconst STORAGE_KEY = 'theme-ui-color-mode';\nconst DARK_QUERY = '(prefers-color-scheme: dark)';\nconst LIGHT_QUERY = '(prefers-color-scheme: light)';\nconst storage = {\n  get: () => {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  },\n  set: value => {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  }\n};\n\nconst getPreferredColorScheme = () => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia(DARK_QUERY).matches) {\n      return 'dark';\n    }\n\n    if (window.matchMedia(LIGHT_QUERY).matches) {\n      return 'light';\n    }\n  }\n\n  return null;\n};\n\nconst useClientsideEffect = typeof window === 'undefined' ? () => {} : useLayoutEffect;\n\nconst TopLevelColorModeProvider = ({\n  outerCtx,\n  children\n}) => {\n  const outerTheme = outerCtx.theme || {};\n  const {\n    initialColorModeName,\n    useColorSchemeMediaQuery,\n    useLocalStorage\n  } = outerTheme.config || outerTheme;\n  let [colorMode, setColorMode] = useState(() => {\n    const preferredMode = useColorSchemeMediaQuery !== false && getPreferredColorScheme();\n    return preferredMode || initialColorModeName;\n  }); // on first render, we read the color mode from localStorage and\n  // clear the class on document element body\n\n  useClientsideEffect(() => {\n    const stored = useLocalStorage !== false && storage.get();\n\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.remove('theme-ui-' + stored);\n    }\n\n    if (useColorSchemeMediaQuery !== 'system' && stored && stored !== colorMode) {\n      colorMode = stored;\n      setColorMode(stored);\n    }\n  }, []); // when mode changes, we save it to localStorage\n\n  useEffect(() => {\n    if (colorMode && useLocalStorage !== false) {\n      storage.set(colorMode);\n    }\n  }, [colorMode, useLocalStorage]);\n  const setPreferredColorScheme = useCallback(() => {\n    const preferredColorScheme = getPreferredColorScheme();\n    setColorMode(preferredColorScheme || initialColorModeName);\n  }, [initialColorModeName]);\n  useEffect(() => {\n    if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n      // It doesn't matter if we add the listener only to the dark media query\n      // Because in our callback function we'll check for both media queries (light and dark).\n      const darkMQL = window.matchMedia(DARK_QUERY);\n\n      if (typeof darkMQL.addEventListener === 'function') {\n        darkMQL.addEventListener('change', setPreferredColorScheme);\n      } else if (typeof darkMQL.addListener === 'function') {\n        darkMQL.addListener(setPreferredColorScheme);\n      }\n    }\n\n    return () => {\n      if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n        const darkMQL = window.matchMedia(DARK_QUERY);\n\n        if (typeof darkMQL.removeEventListener === 'function') {\n          darkMQL.removeEventListener('change', setPreferredColorScheme);\n        } else if (typeof darkMQL.removeListener === 'function') {\n          darkMQL.removeListener(setPreferredColorScheme);\n        }\n      }\n    };\n  }, [useColorSchemeMediaQuery, setPreferredColorScheme]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _outerTheme$colors;\n\n    if ((_outerTheme$colors = outerTheme.colors) != null && _outerTheme$colors.modes && initialColorModeName && Object.keys(outerTheme.colors.modes).indexOf(initialColorModeName) > -1) {\n      console.warn('[theme-ui] The `initialColorModeName` value should be a unique name' + ' and cannot reference a key in `theme.colors.modes`.');\n    }\n  }\n\n  const newTheme = useThemeWithAppliedColorMode({\n    colorMode,\n    outerTheme\n  });\n  const newCtx = { ...outerCtx,\n    theme: newTheme,\n    colorMode,\n    setColorMode\n  };\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: newCtx\n  }, /*#__PURE__*/React.createElement(GlobalColorStyles, {\n    theme: newTheme\n  }), children);\n};\n\nfunction useColorMode() {\n  const {\n    colorMode,\n    setColorMode\n  } = useThemeUI();\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(`[useColorMode] requires the ColorModeProvider component`);\n  } // We're allowing the user to specify a narrower type for its color mode name.\n\n\n  return [colorMode, setColorMode];\n}\n\nconst omitModes = colors => {\n  const res = { ...colors\n  };\n  delete res.modes;\n  return res;\n};\n\nfunction copyRawColors(colors, outerThemeRawColors) {\n  for (const [key, value] of Object.entries(colors)) {\n    if (typeof value === 'string' && !value.startsWith('var(')) {\n      outerThemeRawColors[key] = value;\n    } else if (typeof value === 'object') {\n      const newValue = { ...outerThemeRawColors[key]\n      };\n      copyRawColors(value, newValue);\n      outerThemeRawColors[key] = newValue;\n    }\n  }\n}\n\nfunction useThemeWithAppliedColorMode({\n  outerTheme,\n  colorMode\n}) {\n  const theme = useMemo(() => {\n    const res = { ...outerTheme\n    };\n    const modes = get(res, 'colors.modes', {});\n    const currentColorMode = get(modes, colorMode, {});\n\n    if (colorMode) {\n      res.colors = { ...res.colors,\n        ...currentColorMode\n      };\n    }\n\n    const {\n      useCustomProperties,\n      initialColorModeName = '__default'\n    } = outerTheme.config || outerTheme;\n    let outerThemeRawColors = outerTheme.rawColors || outerTheme.colors || {};\n\n    if (useCustomProperties !== false) {\n      const alreadyHasRawColors = res.rawColors != null;\n      const colors = res.colors || {};\n\n      if (alreadyHasRawColors) {\n        outerThemeRawColors = { ...outerThemeRawColors\n        };\n        copyRawColors(colors, outerThemeRawColors);\n\n        if (outerThemeRawColors.modes) {\n          outerThemeRawColors.modes[initialColorModeName] = omitModes(outerThemeRawColors);\n        }\n\n        res.rawColors = outerThemeRawColors;\n      } else {\n        if (!('modes' in outerThemeRawColors)) {\n          res.rawColors = colors;\n        } else {\n          const modes = {\n            [initialColorModeName]: omitModes(outerThemeRawColors),\n            ...outerThemeRawColors.modes\n          };\n          res.rawColors = { ...colors,\n            modes\n          };\n          /* modes doesn't match index signature by design */\n        }\n      }\n\n      res.colors = toCustomProperties(omitModes(outerThemeRawColors), 'colors');\n    }\n\n    return res;\n  }, [colorMode, outerTheme]);\n  return theme;\n}\n\nfunction GlobalColorStyles({\n  theme\n}) {\n  return jsx(Global, {\n    styles: () => {\n      return {\n        html: __createColorStyles(theme)\n      };\n    }\n  });\n}\n\nfunction NestedColorModeProvider({\n  outerCtx,\n  children\n}) {\n  var _newTheme$config2;\n\n  const newTheme = useThemeWithAppliedColorMode({\n    outerTheme: outerCtx.theme,\n    colorMode: outerCtx.colorMode\n  }); // Nested theme providers need to be rerendered after hydration for the correct\n  // color mode to apply.\n\n  const [needsRerender, setNeedsRerender] = useState( // Note: we could also check some \"ssr-enabled\" flag as an optimization for\n  // SPAs, as deeply nested theme providers will also pay a performance penalty\n  // for this SSR bug fix\n  () => {\n    var _newTheme$config;\n\n    return ((_newTheme$config = newTheme.config) == null ? void 0 : _newTheme$config.useLocalStorage) !== false;\n  });\n  useClientsideEffect(() => void setNeedsRerender(false), []);\n  const themeColors = newTheme.rawColors || newTheme.colors;\n  const useCustomProperties = (_newTheme$config2 = newTheme.config) == null ? void 0 : _newTheme$config2.useCustomProperties;\n  const colorVars = useMemo(() => {\n    if (useCustomProperties === false) {\n      return {};\n    }\n\n    const colors = themeColors || {};\n    return css(__createColorProperties(colors, colors.modes || {}))(newTheme);\n  }, [newTheme, themeColors, useCustomProperties]);\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: { ...outerCtx,\n      theme: newTheme\n    }\n  }, jsx('div', {\n    'data-themeui-nested-provider': true,\n    // the key here ensures that children will be rerendered after color\n    // mode is read from localStorage\n    key: Number(needsRerender),\n    suppressHydrationWarning: true,\n    css: colorVars,\n    children\n  }));\n}\n\nconst ColorModeProvider = ({\n  children\n}) => {\n  const outerCtx = useThemeUI();\n  const isTopLevelColorModeProvider = typeof outerCtx.setColorMode !== 'function';\n  return isTopLevelColorModeProvider ? /*#__PURE__*/React.createElement(TopLevelColorModeProvider, {\n    outerCtx: outerCtx\n  }, children) : /*#__PURE__*/React.createElement(NestedColorModeProvider, {\n    outerCtx: outerCtx\n  }, children);\n};\nconst noflash = `(function() { try {\n  var mode = localStorage.getItem('theme-ui-color-mode');\n  if (!mode) return\n  document.documentElement.classList.add('theme-ui-' + mode);\n} catch (e) {} })();`;\nconst InitializeColorMode = () => jsx('script', {\n  key: 'theme-ui-no-flash',\n  dangerouslySetInnerHTML: {\n    __html: noflash\n  }\n});\n\nexport { ColorModeProvider, InitializeColorMode, useColorMode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}